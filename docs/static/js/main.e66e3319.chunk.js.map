{"version":3,"sources":["assets/img/logo/logo.svg","components/Header.jsx","api/api.js","components/RollItem.jsx","redux/rolls/rolls-actions.js","redux/rolls/rolls.types.js","redux/cart/cart-actions.js","redux/cart/cart-types.js","redux/rolls/rolls-selector.js","components/Loader.jsx","components/RollsList.jsx","components/CartItem.jsx","components/Checkout.jsx","redux/cart/cart-selectors.js","components/Cart.jsx","App.js","redux/rolls/rolls-utils.js","redux/rolls/rolls-reducer.js","redux/cart/cart-utils.js","redux/cart/cart-reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["module","exports","Header","className","src","logo","width","alt","Promise","resolve","reject","setTimeout","db","connect","increaseRoll","id","dispatch","type","payload","decreaseRoll","addToCart","item","title","total","weight","price","img","counter","onClick","selectRolls","state","rolls","selectRollItems","createSelector","rollItems","selectLoading","loading","Loader","mapStateToProps","createStructuredSelector","RollItem","propTypes","getRolls","PropTypes","func","a","api","then","data","useEffect","map","roll","key","increaseFromCart","decreaseFromCart","cart","cartItems","clearCart","useState","number","setNumber","validate","setValidate","onSubmit","e","preventDefault","length","alert","console","log","classnames","placeholder","onChange","target","value","valid","test","selectCartItems","selectTotalPrice","reduce","isEmpty","emptyCart","role","fullCart","App","increase","arr","idx","decrease","initialState","findIndex","find","filter","deleteFromCart","combineReducers","middlewares","thunk","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.e66e3319.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.98f4a23e.svg\";","import React from 'react';\nimport logo from '../assets/img/logo/logo.svg';\n\nconst Header = () => {\n    return (\n        <header className=\"header\">\n            <div className=\"container text-center\">\n                <img src={logo} width=\"92\" alt=\"Суши и пицца\" />\n                <div className=\"display-4\">Доставка роллов</div>\n                <p className=\"lead\">Оперативно и вкусно</p>\n            </div>\n        </header>\n    );\n}\n \nexport default Header;","import db from './db.json';\n\nexport default new Promise((resolve, reject) => {\n    setTimeout(() => {\n        resolve(db);\n    }, 1000);\n})","import React from 'react';\nimport { connect } from 'react-redux';\nimport { increaseRoll, decreaseRoll } from '../redux/rolls/rolls-actions';\nimport { addToCart } from '../redux/cart/cart-actions';\nimport PropTypes from 'prop-types';\n\nconst RollItem = ({ item, increaseRoll, decreaseRoll, addToCart }) => {\n    const {\n        id,\n        title,\n        total,\n        weight,\n        price,\n        img,\n        counter} = item;\n        \n    return (\n        <div className=\"col-md-6 parent\">\n            <div className=\"card mb-4\">\n                <img className=\"product-img\" src={img} alt={title} />\n                <div className=\"card-body text-center\">\n                    <h4 className=\"item-title\">{title}</h4>\n                    <p><small className=\"text-muted\">{total - counter} шт.</small></p>\n                    <div className=\"details-wrapper\">\n                        <div className=\"items\">\n                            <div className=\"items__control\" onClick={() => decreaseRoll(id)}>-</div>\n                            <div className=\"items__current\">{counter}</div>\n                            <div className=\"items__control\" onClick={() => increaseRoll(id)}>+</div>\n                        </div>\n                        <div className=\"price\">\n                            <div className=\"price__weight\">{weight * counter}г.</div>\n                            <div className=\"price__currency\">{price * counter} ₽</div>\n                        </div>\n                    </div>\n                    <button onClick={() => addToCart(item)} type=\"button\" className=\"btn btn-cart btn-block btn-outline-warning\">+ в корзину</button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nRollItem.propTypes = {\n    addToCart: PropTypes.func.isRequired,\n    increaseRoll: PropTypes.func.isRequired,\n    decreaseRoll: PropTypes.func.isRequired\n};\n\n\nexport default connect(null, { increaseRoll, decreaseRoll, addToCart })(RollItem);","import { GET_ROLLS, INCREASE_ROLL, DECREASE_ROLL  } from './rolls.types';\nimport api from '../../api/api';\n\nexport const getRolls = () => async (dispatch) => {\n    api.then(data => {\n        dispatch({\n            type: GET_ROLLS,\n            payload: data\n        });\n    })\n};\n\nexport const increaseRoll = (id) => (dispatch) => {\n    dispatch({\n        type: INCREASE_ROLL,\n        payload: id\n    })\n};\n\nexport const decreaseRoll = (id) => (dispatch) => {\n    dispatch({\n        type: DECREASE_ROLL,\n        payload: id\n    })\n};\n","export const GET_ROLLS = 'GET_ROLLS';\nexport const INCREASE_ROLL = 'INCREASE_ROLL';\nexport const DECREASE_ROLL = 'DECREASE_ROLL';\n","import { ADD_TO_CART, INCREASE_FROM_CART, DECREASE_FROM_CART, CLEAR_CART } from './cart-types';\n\n\nexport const addToCart = (item) => (dispatch) => {\n    dispatch({\n        type: ADD_TO_CART,\n        payload: item\n    });\n};\n\nexport const increaseFromCart = (id) => (dispatch) => {\n    dispatch({\n        type: INCREASE_FROM_CART,\n        payload: id\n    });\n};\n\nexport const decreaseFromCart = (id) => (dispatch) => {\n    dispatch({\n        type: DECREASE_FROM_CART,\n        payload: id\n    });\n};\n\nexport const clearCart = () => (dispatch) => {\n    dispatch({ type: CLEAR_CART });\n};","export const ADD_TO_CART = 'ADD_TO_CART';\nexport const INCREASE_FROM_CART = 'INCREASE_FROM_CART';\nexport const DECREASE_FROM_CART = 'DECREASE_FROM_CART';\nexport const CLEAR_CART = 'CLEAR_CART';\n","import { createSelector } from 'reselect';\n\nexport const selectRolls = state => state.rolls;\n\nexport const selectRollItems = createSelector(\n    [selectRolls],\n    (rolls) => rolls.rollItems\n)\n\nexport const selectLoading = createSelector(\n    [selectRolls],\n    (rolls) => rolls.loading\n)","import React from 'react';\n\nconst Loader = () => {\n    return (\n        <div className=\"loader\">Loading...</div>\n    );\n}\n \nexport default Loader;","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { getRolls } from '../redux/rolls/rolls-actions';\nimport RollItem from './RollItem';\nimport { createStructuredSelector } from 'reselect';\nimport { selectRollItems, selectLoading } from '../redux/rolls/rolls-selector';\nimport PropTypes from 'prop-types';\nimport Loader from './Loader';\n\nconst RollsList = ({ getRolls, rollItems, loading }) => {\n    useEffect(() => {\n        getRolls();\n    }, [ getRolls ]);\n\n    return (\n        <div className=\"col-md-8\">\n\t\t\t<div className=\"row\">\n                {\n                    loading ? <Loader />\n                    : rollItems.map(roll => {\n                        return <RollItem key={roll.id} item={roll}/>\n                    })\n                }\n            </div>\n\t\t</div>\n    );\n}\n\nconst mapStateToProps = createStructuredSelector({\n    rollItems: selectRollItems,\n    loading: selectLoading\n});\n\n\nRollItem.propTypes = {\n    getRolls: PropTypes.func,\n};\n\n\nexport default connect(mapStateToProps, { getRolls })(RollsList);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { increaseFromCart, decreaseFromCart } from '../redux/cart/cart-actions';\nimport PropTypes from 'prop-types';\n\nconst CartItem = ({ item, increaseFromCart, decreaseFromCart }) => {\n    const {\n        id,\n        title,\n        total,\n        weight,\n        price,\n        img,\n        counter } = item;\n    return (\n        <div className=\"cart-item parent\">\n            <div className=\"cart-item__top\">\n                <div className=\"cart-item__img\">\n                    <img src={img} alt=\"roll\" />\n                </div>\n                <div className=\"cart-item__desc\">\n                    <div className=\"cart-item__title\">{title}</div>\n                    <span><small className=\"text-muted\">{total - counter} шт.</small></span>\n                    <span className=\"cart-item__weight price__weight\">/ {weight * counter}г.</span>\n\n                    <div className=\"cart-item__details\">\n                        <div className=\"items items--small\">\n                            <div onClick={() => decreaseFromCart(id)} className=\"items__control\">-</div>\n                            <div className=\"items__current\">{counter}</div>\n                            <div onClick={() => increaseFromCart(id)} className=\"items__control\">+</div>\n                        </div>\n\n                        <div className=\"price\">\n                            <div className=\"price__currency\">{price * counter} ₽</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nCartItem.propTypes = {\n    increaseFromCart: PropTypes.func.isRequired,\n    decreaseFromCart: PropTypes.func.isRequired\n};\n\nexport default connect(null, { increaseFromCart, decreaseFromCart })(CartItem);","import React, { useState } from 'react';\nimport classnames from 'classnames';\nimport { connect } from 'react-redux';\nimport { clearCart } from '../redux/cart/cart-actions';\nimport PropTypes from 'prop-types';\n\nconst Checkout = ({ cart, clearCart }) => {\n\n    const [ number, setNumber ] = useState('');\n    const [ validate, setValidate ] = useState(true);\n\n    const onSubmitForm = (e) => {\n        e.preventDefault();\n        if (number.length === 0) {\n            setValidate(false);\n            return;\n        }\n        if (validate) {\n            alert('Спасибо за заказ!');\n            console.log(cart);\n            setNumber('');\n            clearCart();\n        }\n    };\n\n    const onChangeInput = (e) => {\n        setNumber(e.target.value);\n        const regExp = /^\\+?\\d{2}[- ]?\\d{3}[- ]?\\d{5}$/;\n        const valid = regExp.test(number);\n        setValidate(valid);\n    };\n\n    return (\n        <div className=\"card-body border-top\">\n            <h5 className=\"card-title\">Оформить заказ</h5>\n\n            <form onSubmit={onSubmitForm}>\n                <div className=\"form-group\">\n                    {\n                        !validate ? \n                            <p className=\"label_error\">Введите корректный номер телефона!</p>\n                        : null\n                    }\n                    <input\n                        type=\"text\"\n                        className={classnames(\"form-control\", {\n                            \"error\": !validate\n                        })}\n                        placeholder=\"Ваш номер телефона\"\n                        onChange={onChangeInput}\n                        value={number}\n                    />\n                </div>\n                <button type=\"submit\" id=\"checkout\" className=\"btn btn-primary\">Заказать</button>\n            </form>\n        </div>\n    );\n}\n\nconst mapStateToProps = ({ cart: { cartItems } }) => ({\n    cart: cartItems\n});\n\nCheckout.propTypes = {\n    clearCart: PropTypes.func\n};\n\nexport default connect(mapStateToProps, { clearCart })(Checkout);","import { createSelector } from 'reselect';\n\nexport const selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector(\n    [selectCart],\n    (cart) => cart.cartItems\n)\n\nexport const selectTotalPrice = createSelector(\n    [selectCartItems],\n    (cartItems) => cartItems.reduce((total, item) => total + (item.counter * item.price), 0)\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport CartItem from './CartItem';\nimport Checkout from './Checkout';\nimport { createStructuredSelector } from 'reselect';\nimport { selectCartItems, selectTotalPrice } from '../redux/cart/cart-selectors';\nimport PropTypes from 'prop-types';\n\nconst Cart = ({ cartItems, total }) => {\n\n    const isEmpty = cartItems.length === 0;\n\n    const emptyCart = (\n        <div className=\"card mb-4\" id=\"empty_cart\">\n            <div className=\"card-body\">\n                <h5 className=\"card-title\">Ваш заказ</h5>\n                <div className=\"alert alert-secondary\" role=\"alert\">\n                    Корзина пуста\n                </div>\n            </div>\n        </div>\n    );\n\n    const fullCart = (\n        <div className=\"card cart_full-wrap\">\n            <div className=\"card-body\">\n                <h5 className=\"card-title\">Ваш заказ</h5>\n                <div className=\"cart-wrapper full-cart-wrap\" id=\"full_cart\">\n                    {\n                        !isEmpty ? cartItems.map(item => <CartItem key={item.id} item={item} />) : null\n                    }\n                </div>\n                <div className=\"cart-total\">\n                    <p><span className=\"h5\">Доставка:</span> <span className=\"delivery-cost free\">бесплатно</span> </p>\n                <p><span className=\"h5\">Итого:</span> <span className=\"total-price\">{total}</span> <span className=\"rouble\">₽</span></p>\n                </div>\n            </div>\n\n            <Checkout />\n        </div>\n    );\n    return isEmpty ? emptyCart : fullCart;\n}\n\nconst mapStateToProps = createStructuredSelector({\n    cartItems: selectCartItems,\n    total: selectTotalPrice\n});\n\nCart.propTypes = {\n    cartItems: PropTypes.array,\n    total: PropTypes.number\n};\n\nexport default connect(mapStateToProps)(Cart);","import React from 'react';\nimport './App.css';\nimport 'bootstrap-css-only'; \n\n\nimport Header from './components/Header';\nimport RollsList from './components/RollsList';\nimport Cart from './components/Cart';\n\nconst App = () => {\n  return (\n    <>\n    <Header />\n      <div className=\"container mb-5\">\n        <div className=\"row\">\n          <RollsList />\n          <div className=\"col-md-4\">\n            <Cart />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","export const increase = (arr, idx) => {\n    return arr.map(roll => {\n        return roll.id === idx && roll.counter < roll.total ? \n        {...roll, counter: roll.counter + 1}\n        : roll\n    })\n};\n\nexport const decrease = (arr, idx) => {\n    return arr.map(roll => {\n        return roll.id === idx && roll.counter > 1 ? \n        {...roll, counter: roll.counter - 1}\n        : roll\n    })\n};","import { increase, decrease } from './rolls-utils';\nimport { GET_ROLLS, INCREASE_ROLL, DECREASE_ROLL } from './rolls.types';\n\nconst initialState = {\n    rollItems: [],\n    loading: true\n};\n\nexport default (state = initialState, { type, payload }) => {\n    switch(type) {\n        case GET_ROLLS:\n            return {\n                ...state,\n                rollItems: payload,\n                loading: false\n            }\n        case INCREASE_ROLL:\n            return {\n                ...state,\n                rollItems: increase(state.rollItems, payload)\n            }\n        case DECREASE_ROLL:\n            return {\n                ...state,\n                rollItems: decrease(state.rollItems, payload)\n            }\n            \n        default:\n            return state;\n        \n    }\n};\n","export const addToCart = (arr, payload) => {\n    const index = arr.findIndex(item => item.id === payload.id);\n    if (index === -1) {\n        return [...arr, payload]\n    }\n    return arr.map(item => item.id === payload.id ? payload : item);\n};\n\nconst deleteFromCart = (arr, id) => arr.filter(item => item.id !== id);\n\nexport const decrease = (arr, idx) => {\n    const item = arr.find(item => item.id === idx);\n    if (item.counter === 1) {\n        return deleteFromCart(arr, idx);\n    }\n    return arr.map(roll => {\n        return roll.id === idx && roll.counter > 1 ?\n        {...roll, counter: roll.counter - 1}\n        : roll\n    })\n};","import { ADD_TO_CART, INCREASE_FROM_CART, DECREASE_FROM_CART, CLEAR_CART } from './cart-types';\nimport { addToCart } from './cart-utils';\nimport { increase } from '../rolls/rolls-utils';\nimport { decrease } from './cart-utils';\n\nconst initialState = {\n    cartItems: []\n};\n\nexport default (state = initialState, { type, payload }) => {\n    switch(type) {\n        case ADD_TO_CART:\n            return {\n                ...state,\n                cartItems: addToCart(state.cartItems, payload)\n            }\n        case INCREASE_FROM_CART:\n            return {\n                ...state,\n                cartItems: increase(state.cartItems, payload)\n            }\n        case DECREASE_FROM_CART:\n            return {\n                ...state,\n                cartItems: decrease(state.cartItems, payload)\n            }\n        case CLEAR_CART:\n            return {\n                ...state,\n                cartItems: []\n            }\n        default:\n            return state;\n    }\n};","import { combineReducers } from 'redux';\nimport rollReducer from './rolls/rolls-reducer';\nimport cartReducer from './cart/cart-reducer';\n\nexport default combineReducers({\n    rolls: rollReducer,\n    cart: cartReducer\n});","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './root-reducer';\n\nconst initialState = {};\nconst middlewares = [ thunk ];\n\nexport default createStore(rootReducer, initialState, composeWithDevTools(\n    applyMiddleware(...middlewares)\n));\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}